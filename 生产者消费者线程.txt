#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <pthread.h>

#define PRO 1
#define CON 3
pthread_t tids[PRO+CON] ;
pthread_mutex_t mutex ;
pthread_cond_t cond ;

int ready = 0 ;  //生产的产品编号
void* pro( void* arg ){
        int id = *(int*)arg ;
        free(arg) ;

        while(1){
                sleep(1) ;
                pthread_mutex_lock(&mutex) ;
                printf("%d 生产者生产的产品 %d\n",id,ready+1) ;
                ready++ ;
                sleep(rand()%3) ;       
                printf("%d 生产者生产的产品结束 %d\n",id,ready) ;
                pthread_cond_signal(&cond) ; 
                pthread_mutex_unlock(&mutex) ;
        }
}
void* con( void* arg ){
        int id = *(int*)arg ;
        free(arg) ;

        while(1){
                pthread_mutex_lock(&mutex) ;
                while( ready <= 0 ) {
                        printf("%d 消费线程等待消费产品\n",id) ;
                        pthread_cond_wait(&cond,&mutex) ;
                }
                printf("%d 消费线程得到产品，开始消费产品 %d \n",id,ready) ;
                ready-- ;
                sleep(rand()%3) ;
                printf("%d消费者消费完毕,%d\n",id,ready+1) ;
                sleep(rand()%2) ;
                pthread_mutex_unlock(&mutex) ;
        }
}
void main(){
        srand(getpid()) ;
        pthread_mutex_init(&mutex,NULL) ;
        pthread_cond_init(&cond,NULL) ;
        int i ;
        for(i=0;i<PRO;++i){
                int* p = malloc(sizeof(int)) ;
                *p = i ;
                pthread_create(&tids[i],NULL,pro,(void*)p) ;
        }

        for(i=0;i<CON;++i){
                int* p = malloc(sizeof(int)) ;
                *p = i ;
                pthread_create(&tids[i+PRO],NULL,con,(void*)p) ;
        }
        for(i=0;i<PRO+CON;++i){
                pthread_join(tids[i],NULL) ;
        }
        pthread_mutex_destroy(&mutex) ;
        pthread_cond_destroy(&cond) ;
}
